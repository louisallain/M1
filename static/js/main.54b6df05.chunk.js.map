{"version":3,"sources":["utils/firebase_config.js","ConnectionPage/ConnectionPage.js","utils/utils_function.js","List/List.js","EventsCalendar/EventsCalendar.js","HomePage/HomePage.js","MainContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fbDatabase","database","fbAuth","auth","ConnectionPage","props","handleLoginButton","ref","once","snapshot","state","email","val","signInWithEmailAndPassword","passwordText","catch","error","console","code","window","alert","handleResetAdminPassword","sendPasswordResetEmail","then","className","action","type","name","placeholder","onChange","event","setState","target","value","onClick","this","React","Component","spliceSlice","str","index","count","add","length","slice","parseICS","text","getOnlyCourses","parseCustomDateStringToJSDateString","customeDateString","ret","eventsArray","split","events","map","startDateStr","match","replace","endDateStr","isCourse","push","title","start","Date","end","List","items","item","key","id","removeItem","validateItem","hasValidateButton","TodoListItem","onClickClose","bind","onClickDone","parseInt","navigate","localizer","momentLocalizer","moment","CustomToolbar","onNavigate","label","messages","changesSaved","disabled","style","backgroundColor","saveEventsOnDB","downloadJSONEvents","openJSONLoadModal","CustomEvent","usersAcceptedForThisEvent","usersRequestForThisEvent","deleteEvent","EventsCalendar","componentWillUnmount","confirm","handleOpenLoadJSONModal","showLoadJSONModal","handleCloseLoadJSONModal","addEvent","activateFeedback","setMinutes","getMinutes","slotLengthChosen","isPossible","filter","ev","getHours","beginningOfTheDay","endOfTheDay","uuidv4","handleRemoveEvent","e","handleShowMoreOfTheEvent","showShowMoreForEventModal","usersOfTheSelectedEvent","Object","values","users","u","acceptedForEvents","includes","usersRequestOfTheSelectedEvent","requestForEvents","selectedEvent","handleCloseShowMoreOfEventModal","handleSubmitJSONEventsFile","evt","preventDefault","JSONEventsFileInput","current","files","fileReader","readAsText","log","filename","a","document","createElement","file","Blob","href","URL","createObjectURL","download","click","myUtils","set","JSON","stringify","matchUsersStateByExistingEventsOnDB","handleDenyUserAccess","denieAcessForThisUser","handleRejectUserRequestAccess","rejectRequestAccessForThisUser","handleAcceptUserRequestAccess","tmp","acceptRequestAccesForThisUser","createRef","keepExistingEventsCheckbox","FileReader","joinedEvents","ADEevents","startDate","endDate","v","startDateADE","endDateADE","dayLayoutAlgorithm","slotLengthCalendar","onload","checked","parse","result","forEach","onbeforeunload","isOpen","contentLabel","onSubmit","accept","selectable","defaultView","Views","WEEK","views","scrollToTime","defaultDate","onDoubleClickEvent","onSelectSlot","t","step","timeslots","min","max","onSelecting","slotPropGetter","date","components","toolbar","HomePage","retrieveADE_Events","fetch","res","json","ADE_Events","utils_function","contents","ADE_EventsRetrieved","retrieveUsersFromDB","on","usersRetrieved","retrieveEventsFromDB","tmpEvents","eventsRetrieved","handleCalendarButton","currentPage","handleWaitingForAcceptationUsersButton","handleVIPUsersButton","handleShowAcceptedUsers","tmpUsers","entries","er","flatMap","saveUsersStateOnDB","denieAccessForThisUser","callback","userKey","tmpUser","denieVIPForThisUser","isVIP","requestVIP","authorizeVIPForThisUser","centerContent","dateStringOptions","hour","minute","listEventsRequested","flat","toLocaleDateString","requestVIPList","VIPList","listEventsAccepeted","handleLogoutButton","MainContainer","signOut","componentDidMount","onAuthStateChanged","user","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.54b6df05.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n/**\n * Configuration for Firebase.\n */\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC6kPaCF2EsVck5p0qE1rPmRzz6HA414fA\",\n    authDomain: \"gestionnairesallesparempreinte.firebaseapp.com\",\n    databaseURL: \"https://gestionnairesallesparempreinte.firebaseio.com\",\n    projectId: \"gestionnairesallesparempreinte\",\n    storageBucket: \"gestionnairesallesparempreinte.appspot.com\",\n    messagingSenderId: \"623460427677\",\n    appId: \"1:623460427677:web:0a3c55934f7515f09bf174\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n/**\n * Reference to the database service.\n */\nexport var fbDatabase = firebase.database()\n/**\n * Reference to the authentication service.\n */\nexport var fbAuth = firebase.auth()","import React from 'react';\nimport * as firebase from '../utils/firebase_config';\nimport './ConnectionPage.css'\n\n/**\n * Classe représent la page de connexion de l'application.\n */\nclass ConnectionPage extends React.Component {\n\n  /**\n   * Initialise l'état du composant.\n   * @param {*} props les propriétés héritées du parent. \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      passwordText: '',\n    };\n  }\n\n  /**\n   * Vérifie toutes les conditions pour que l'admin se connecte :\n   * - vérifie que c'est bien l'email de l'admin et son mot de passe\n   */\n  handleLoginButton = () => {\n\n    firebase.fbDatabase.ref('admin_email').once('value', (snapshot) => {\n      if(this.state.email === snapshot.val()) { // si l'email saisi correspond à l'email de l'admin sauvegardé sur la bdd\n        \n        firebase.fbAuth.signInWithEmailAndPassword(this.state.email, this.state.passwordText).catch((error) => {\n          console.error(error)\n          if(error.code === \"auth/wrong-password\") {\n            window.alert(\"Mauvais mot de passe !\")\n          }\n        });\n      } \n      else {\n        window.alert(\"Seule l'adresse mail de l'utilisateur peut être utilisé pour se connecter à cette application.\")\n      }\n    })\n  } \n\n  /**\n   * Envoie un mail à l'email de l'admin afin de réinitialiser le mot de passe.\n   */\n  handleResetAdminPassword = () => {\n    firebase.fbDatabase.ref('admin_email').once('value', (snapshot) => {\n      firebase.fbAuth.sendPasswordResetEmail(snapshot.val()).then(() => {\n        alert(\"Un email de réinitialisation de mot de passe a été envoyé à l'adresse mail de l'administrateur.\")\n      }).catch((error) => console.error(error))\n    })\n  }\n\n  /**\n   * Méthode de rendu du composant.\n   */\n  render() {\n    return (\n      <div className=\"loginContainer\">\n\n        <h1 className=\"appTitle\">Application d'administration de CyberKey</h1>\n        <form className=\"loginForm\" action=\"\">\n          <input type=\"text\" name=\"email\" placeholder=\"Admin email\" onChange={(event) => this.setState({email : event.target.value})}/>\n          <input type=\"password\" name=\"password\" placeholder=\"Mot de passe\" onChange={(event) => this.setState({passwordText : event.target.value})}/>\n        </form>\n\n        <button className=\"validateButton\" onClick={this.handleLoginButton}>\n            Valider\n        </button>\n        <button className=\"validateButton\" onClick={this.handleResetAdminPassword}>\n            Réinitialiser mot de passe\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ConnectionPage;\n","/**\n * File contains utils functions.\n */\n\n/**\n * Hash text using SHA-256 algorithm.\n * @param  {String} text the text to be hashed\n * @return {String} hashed text of 64 bytes length.\n */\nexport const digestText = async (text) => {\n\n    const encoder = new TextEncoder();\n    const data = encoder.encode(text);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));                     // convertit le buffer en tableau d'octet\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convertit le tableau en chaîne hexadélimale\n    return hashHex;\n}\n/**\n * Hash text using SH-256 algorithm a number of times.\n * @param  {String} text the text to be hashed.\n * @param  {Number} N the number of time the text should be hashed.\n * @return {String} hashed text N times of 64 bytes length.\n */\nexport const digestText_N_Times = async (text, N) => {\n\n    let tmp = await digestText(text)\n    for(let i=1; i===N; i++) tmp = await digestText(tmp)\n    return tmp;\n}\n\n/**\n * Télécharge un fichier dans lequel sera contenu le \"text\" en paramètre.\n * @param {string} text texte qui sera contenu dans le fichier à télécharger\n * @param {string} filename nom du fichier qui sera téléchargé\n */\nexport const downloadFileFromText = (text, filename) => {\n    let a = document.createElement(\"a\");\n    let file = new Blob([text], {type: 'text/plain'});\n    a.href = URL.createObjectURL(file);\n    a.download = filename;\n    a.click();\n}\n\n/**\n * Converti un objet JSON en tableau.\n * @param {object} json l'objet json à convertir\n */\nexport const json2array = (json) => {\n    let result = [];\n    let keys = Object.keys(json);\n    keys.forEach((key) =>{\n        result.push(json[key]);\n    });\n    return result;\n}\n\nexport const spliceSlice = (str, index, count, add) => {\n    if (index < 0) {\n      index = str.length + index;\n      if (index < 0) {\n        index = 0;\n      }\n    }\n  \n    return str.slice(0, index) + (add || \"\") + str.slice(index + count);\n  }\n\n/**\n * Parse un fichier ICS et retourne un tableau d'object JSON de la forme : \n *  [{title : string, start : Date, end : Date, isCourse : boolean}]\n * Le booléen isCourse présent dans chaque object JSON du tableau retourné indique s'il s'agit d'un cours classique avec un enseignant\n * ou un créneau libre.\n * @param {string} text le text du fichier ics\n * @param {boolean} getOnlyCourses si vrai alors le tableau retourné ne contiendra pas les créneaux libres (sans enseignant).\n */\nexport const parseICS = (text, getOnlyCourses) => {\n\n    let parseCustomDateStringToJSDateString = (customeDateString) => {\n        let ret = spliceSlice(customeDateString, 4, 0, \"-\")\n        ret = spliceSlice(ret, 7, 0, \"-\")\n        ret = spliceSlice(ret, 13, 0, \":\")\n        ret = spliceSlice(ret, 16, 0, \":\")\n        return ret\n    }\n\n    let eventsArray = text.split(/BEGIN:VEVENT/g).slice(1) // enlève les métadonnées\n    let events = []\n    eventsArray.map(str => {\n        \n        let startDateStr = str.match(/DTSTART:.+\\r\\n/g)[0].replace(/DTSTART:/g, \"\").replace(/[\\r\\n]/g, \"\")\n        startDateStr = parseCustomDateStringToJSDateString(startDateStr)\n        let endDateStr = str.match(/DTEND:.+\\r\\n/g)[0].replace(/DTEND:/g, \"\").replace(/[\\r\\n]/g, \"\")\n        endDateStr = parseCustomDateStringToJSDateString(endDateStr)\n        let isCourse = (str.match(/DESCRIPTION:.+\\r\\n/g)[0].replace(/DESCRIPTION:/g, \"\").match(/\\\\n/g).length) > 4 ? true : false \n\n        events.push({\n            title: str.match(/SUMMARY:.+\\r\\n/g)[0].replace(/SUMMARY:/g, \"\").replace(/[\\r\\n]/g, \"\"),\n            start: new Date(startDateStr),\n            end: new Date(endDateStr),\n            isCourse: isCourse\n        })\n    })\n   return events\n}","import React from 'react'\r\nimport './List.css'\r\n\r\n/**\r\n * Classe représentant une liste de choses avec un bouton valider et supprimer.\r\n */\r\nexport default class List extends React.Component {\r\n\r\n    /**\r\n     * Méthode de rendu du composant.\r\n     */\r\n    render() {\r\n        var items = this.props.items.map((item, index) => {\r\n            return (\r\n                <TodoListItem \r\n                    key={item.id} \r\n                    item={item} \r\n                    index={index} \r\n                    removeItem={this.props.removeItem} \r\n                    validateItem={this.props.validateItem} \r\n                    hasValidateButton={this.props.hasValidateButton}/>\r\n            );\r\n        });\r\n        return (\r\n            <ul className=\"list-group\"> {items} </ul>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Classe représentant un item de la liste définie ci-dessus.\r\n */\r\nclass TodoListItem extends React.Component {\r\n\r\n    /**\r\n     * Initialise l'état du composant.\r\n     * @param {*} props propriétés héritées du parent.\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickClose = this.onClickClose.bind(this);\r\n        this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Handler du bouton de suppression de l'élément.\r\n     */\r\n    onClickClose() {\r\n        var index = parseInt(this.props.index);\r\n        var item = this.props.item;\r\n        this.props.removeItem(index, item);\r\n    }\r\n\r\n    /**\r\n     * Handler du bouton de validation de l'élément.\r\n     */\r\n    onClickDone() {\r\n        var index = parseInt(this.props.index);\r\n        var item = this.props.item;\r\n        this.props.validateItem(index, item);\r\n    }\r\n\r\n    /**\r\n     * Méthode de rendu du composant.\r\n     */\r\n    render() {\r\n        return (\r\n            <li className=\"list-group-item \">\r\n                {this.props.hasValidateButton && <button type=\"button\" title=\"Valider\" className=\"item-button item-button-validate\" onClick={this.onClickDone}>&#10003;</button>}\r\n                <button type=\"button\" title=\"Supprimer\" className=\"item-button item-button-remove\" onClick={this.onClickClose}>&#88;</button>\r\n                {this.props.item.id}\r\n            </li>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/fr'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport Modal from 'react-modal'\r\nimport * as firebase from '../utils/firebase_config'\r\nimport * as myUtils from '../utils/utils_function'\r\nimport List from '../List/List'\r\n\r\nimport './react-big-calendar.css'\r\nimport './EventsCalendar.css'\r\n\r\n\r\nconst navigate = {\r\n    PREVIOUS: 'PREV',\r\n    NEXT: 'NEXT',\r\n    TODAY: 'TODAY',\r\n    DATE: 'DATE',\r\n}\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n/**\r\n * Classe du composant représentant la barre d'outil du calendrier.\r\n */\r\nclass CustomToolbar extends React.Component {\r\n\r\n    /**\r\n     * Méthode de rendu du composant.\r\n     */\r\n    render() {\r\n        let { localizer: { messages }, label } = this.props\r\n        return(\r\n            <div className=\"rbc-toolbar\">\r\n                <span className=\"rbc-btn-group\">\r\n                    <button type=\"button\" onClick={this.navigate.bind(null, navigate.PREVIOUS)}>Précédent</button>\r\n                    <button type=\"button\" onClick={this.navigate.bind(null, navigate.TODAY)}>Aujourd'hui</button>\r\n                    <button type=\"button\" onClick={this.navigate.bind(null, navigate.NEXT)}>Suivant</button>\r\n                </span>\r\n                <span className=\"rbc-toolbar-label\">{label}</span>\r\n                {this.props.changesSaved ? \r\n                <button type=\"button\" disabled style={{backgroundColor: \"grey\"}}>Sauvegardé !</button>\r\n                :\r\n                <button type=\"button\" style={{backgroundColor: \"#4CAF50\"}} onClick={this.props.saveEventsOnDB}>Sauvegarder</button>\r\n                }\r\n                <span className=\"rbc-btn-group\">\r\n                    <button type=\"button\" onClick={this.props.downloadJSONEvents}>Télécharger les créneaux</button>\r\n                    <button type=\"button\" onClick={this.props.openJSONLoadModal}>Charger des créneaux</button>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Méthode permettant de naviguer entre les semaines du calendrier.\r\n     */\r\n    navigate = action => {\r\n        this.props.onNavigate(action)\r\n    }\r\n}\r\n\r\n/**\r\n * Composant représentant un créneau sur le calendrier.\r\n * @param {*} props propriétés héritées du parent.\r\n */\r\nfunction CustomEvent(props) {\r\n    if(props.event.isCourse) { // cours défini par ADE\r\n        return (\r\n            <div className=\"customEventContainer\" title=\"Cours défini par ADE !\">\r\n                <p className=\"eventInfos courseInfos\">\r\n                    {props.event.title}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n    else { // cours défini par l'adminitrateur\r\n        return (\r\n            <div className=\"customEventContainer\" title=\"Double cliquer pour plus d'infos\">\r\n                <p className=\"eventInfos\">\r\n                    {props.event.title}<br/>\r\n                    {props.usersAcceptedForThisEvent.length} accès<br/>\r\n                    {props.usersRequestForThisEvent.length} demandes\r\n                </p>\r\n                <button className=\"deleteEventButton\" title=\"Supprimer ce créneau\" onClick={() => props.deleteEvent(props.event)}>X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Classe représentant le calendrier des créneaux.\r\n */\r\nclass EventsCalendar extends React.Component {\r\n\r\n    /**\r\n     * Initialise l'état du composant.\r\n     * @param {Object} props propriétés héritées du parent.\r\n     */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.JSONEventsFileInput = React.createRef()\r\n        this.keepExistingEventsCheckbox = React.createRef()\r\n        this.fileReader = new FileReader()\r\n\r\n        /**\r\n         * Join les créneaux libres définis par l'administrateur aux créneaux de cours \r\n         * définis par l'administration de l'université (\"ADE\"). Si il y a un conflit entre ces deux listes,\r\n         * on gardera le créneau définit par ADE.\r\n         */\r\n        let joinedEvents = this.props.ADEevents.filter(e => e.isCourse == true)\r\n        this.props.events.map(e => {\r\n            let startDate = new Date(e.start)\r\n            let endDate = new Date(e.end)\r\n            if(this.props.ADEevents.filter(e => e.isCourse == true).filter(v => {\r\n                let startDateADE = new Date(v.start)\r\n                let endDateADE = new Date(v.end)\r\n                return ((startDateADE >= startDate && startDateADE <= endDate) || (endDateADE <= endDate && endDateADE >= startDate))\r\n            }).length === 0) {\r\n                joinedEvents.push(e)\r\n            }\r\n        })\r\n\r\n        this.state = {\r\n            ADEevents: this.props.ADEevents,\r\n            events: joinedEvents,\r\n            dayLayoutAlgorithm: 'no-overlap',\r\n            slotLengthCalendar: 30,\r\n            slotLengthChosen: 90,\r\n            beginningOfTheDay: new Date(1970, 1, 1, 8, 0, 0),\r\n            endOfTheDay: new Date(1970, 1, 1, 19, 30, 0),\r\n            showLoadJSONModal: false,\r\n            changesSaved: true,\r\n            showShowMoreForEventModal: false,\r\n            usersOfTheSelectedEvent: [],\r\n            usersRequestOfTheSelectedEvent: [],\r\n            selectedEvent: null,\r\n        };\r\n    } \r\n\r\n    /**\r\n     * Fonction invoquée lorsque le composant est monté.\r\n     * Ajoute un listener au chargement de l'entrée d'un fichier des créneaux.\r\n     * Ajoute un listener lorsque l'utilisateur quitte la page afin de vérifier si l'état des créneaux dans le calendrier a été sauvegardé en BDD.\r\n     */\r\n    componentDidMount() {\r\n        this.fileReader.onload = (event) => {\r\n            try {\r\n                if(this.keepExistingEventsCheckbox.current.checked === false) {\r\n                    this.setState({events: []})\r\n                }\r\n                let tmpEvents = JSON.parse(event.target.result);\r\n                tmpEvents.forEach(e => {\r\n                    e.start = new Date(e.start)\r\n                    e.end = new Date(e.end)\r\n                    this.addEvent(e, false)\r\n                })\r\n                this.handleCloseLoadJSONModal()\r\n            }\r\n            catch(e) {\r\n                console.log(e)\r\n                alert(\"Veuillez respecter le format des créneaux suivant : {start: instanceOf(Date), end: instanceOf(Date)}\")\r\n            }\r\n        }\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if(!this.state.changesSaved) return \"Les changements sur les créneaux ne sont pas sauvegardés, êtes vous sûr de vouloir quitter la page ?\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fonction invoquée avant que le composant soit démonté.\r\n     * Vérifie que les changements courants sont sauvegardés en BDD.\r\n     */\r\n    componentWillUnmount = () => {\r\n        if(this.state.changesSaved === false) {\r\n            let c = window.confirm(\"Voulez vous enregistrer les changements apportés aux créneaux ?\")\r\n            if(c) this.saveEventsOnDB();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler d'ouverture du modal de chargement d'un fichier de créneaux.\r\n     */\r\n    handleOpenLoadJSONModal = () => {\r\n        this.setState({showLoadJSONModal: true})\r\n    }\r\n\r\n    /**\r\n     * Handler de fermeture du modal de chargement d'un fichier de créneaux.\r\n     */\r\n    handleCloseLoadJSONModal = () => {\r\n        this.setState({showLoadJSONModal: false})\r\n    }\r\n\r\n    /**\r\n     * Ajoute un évènement sur le calendrier en précisant la date de début et de fin.\r\n     */\r\n    addEvent = ({ start, end}, activateFeedback) => {\r\n\r\n        start = new Date(start)\r\n        end = new Date(start) \r\n        end.setMinutes(start.getMinutes() + this.state.slotLengthChosen) // recalcule la fin du créneau en fonction de la durée prévu d'un créneau\r\n        // vérifie qu'un créneau n'en chevauche pas un autre\r\n        let isPossible = this.state.events.filter((ev) => (start >= ev.start && start < ev.end) || (end > ev.start && end <= ev.end)).length > 0 ? false : true\r\n\r\n        if(start.getHours() >= this.state.beginningOfTheDay.getHours() && end.getHours() <= this.state.endOfTheDay.getHours()) {\r\n\r\n            if(isPossible) {\r\n                const title = \"CyberLab dispo\"\r\n\r\n                if (title)\r\n                this.setState({\r\n                    events: [\r\n                    ...this.state.events,\r\n                    {\r\n                        id: uuidv4(),\r\n                        start,\r\n                        end,\r\n                        title,\r\n                    },],\r\n                    changesSaved: false,\r\n                })\r\n            } else {\r\n                if(activateFeedback) alert(\"Un autre créneau existe déjà à ce moment.\")\r\n            }\r\n            \r\n        } else {\r\n            if(activateFeedback) alert(\"Restez dans les limites de la journée.\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Supprime un créneau.\r\n     */\r\n    handleRemoveEvent = (event) => {\r\n        let c = window.confirm(\"Supprimer le créneau ?\")\r\n        if(c) this.setState({\r\n                                events: this.state.events.filter(e => e.id !== event.id),\r\n                                changesSaved: false,\r\n                            })\r\n    }\r\n\r\n    /**\r\n     * Handler permettant d'afficher le modal affichangt les détails d'un créneau.\r\n     */\r\n    handleShowMoreOfTheEvent = (event) => {\r\n        if(!event.isCourse) {\r\n            this.setState({\r\n                showShowMoreForEventModal: true, \r\n                usersOfTheSelectedEvent: Object.values(this.props.users).filter(u => u.acceptedForEvents).filter(u => u.acceptedForEvents.includes(event.id)), \r\n                usersRequestOfTheSelectedEvent: Object.values(this.props.users).filter(u => u.requestForEvents).filter(u => u.requestForEvents.includes(event.id)), \r\n                selectedEvent: event\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler permettant de fermer le modal affichant les détails d'un créneau.\r\n     */\r\n    handleCloseShowMoreOfEventModal = () => {\r\n        this.setState({showShowMoreForEventModal: false})\r\n    }\r\n\r\n    /**\r\n     * Handler permettant d'envoyer un fichier ce créneaux JSON.\r\n     */\r\n    handleSubmitJSONEventsFile = (evt) => {\r\n        evt.preventDefault()\r\n        if(this.JSONEventsFileInput.current.files[0]) {\r\n            this.fileReader.readAsText(this.JSONEventsFileInput.current.files[0])\r\n        }\r\n        else {\r\n            alert(\"Sélectionner un fichier d'abord.\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Télécharge le fichiers des créneaux DEPUIS LA BDD et non pas forcémément les créneaux affichés (si l'utilisateur n'a pas sauvegardé).\r\n     */\r\n    downloadJSONEvents = () => {\r\n\r\n        firebase.fbDatabase\r\n            .ref(\"events\")\r\n            .once(\"value\", \r\n                (snapshot) => {\r\n                    console.log(snapshot.val())\r\n                    myUtils.downloadFileFromText(snapshot.val(), \"creneaux.json\")\r\n                }, \r\n                (error) => console.error(error)\r\n            )\r\n    }\r\n\r\n    /**\r\n     * Sauvegarde l'état actuel des créneaux en BDD.\r\n     */\r\n    saveEventsOnDB = () => {       \r\n        firebase.fbDatabase.ref(\"events\").set(JSON.stringify(this.state.events), (error) => {\r\n            if(error) {\r\n                console.log(error)\r\n                alert(error)\r\n            } else {\r\n                this.props.matchUsersStateByExistingEventsOnDB(this.state.events);\r\n                this.setState({changesSaved: true})\r\n                alert(\"Changements sauvegardés !\")\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handler du bouton où l'admin réfute l'accès d'un utilisateur à un créneau.\r\n     */\r\n    handleDenyUserAccess = (index, item) => {\r\n        this.props.denieAcessForThisUser(index, item, this.state.selectedEvent, () => {\r\n            this.setState({\r\n                usersOfTheSelectedEvent: this.state.usersOfTheSelectedEvent.filter(u => u.id !== item.id)\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handler du bouton où l'admin rejette la demande d'accès d'un utilisateur à un créneau.\r\n     */\r\n    handleRejectUserRequestAccess = (index, item) => {\r\n        this.props.rejectRequestAccessForThisUser(index, item, this.state.selectedEvent, () => {\r\n            this.setState({\r\n                usersRequestOfTheSelectedEvent: this.state.usersRequestOfTheSelectedEvent.filter(u => u.id !== item.id)\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handler du bouton où l'admin accepte la demande d'accès d'un utilisateur à créneau.\r\n     */\r\n    handleAcceptUserRequestAccess = (index, item) => {\r\n        let tmp = this.state.usersOfTheSelectedEvent\r\n        tmp.push(item)\r\n        this.props.acceptRequestAccesForThisUser(index, item, this.state.selectedEvent, () => {\r\n            this.setState({\r\n                usersOfTheSelectedEvent: tmp,\r\n                usersRequestOfTheSelectedEvent: this.state.usersRequestOfTheSelectedEvent.filter(u => u.id !== item.id)\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Méthode de rendu du composant.\r\n     */\r\n    render() {\r\n        return (\r\n            <div className=\"calendarContainer\">\r\n                {/* Modal servant à charger un fichier de créneaux JSON */}\r\n                <Modal \r\n                    isOpen={this.state.showLoadJSONModal}\r\n                    contentLabel=\"Load JSON custom events\"\r\n                    className=\"modal loadJSONModal\">\r\n                    <button className=\"closeJSONModal\" onClick={this.handleCloseLoadJSONModal}>Fermer</button>\r\n                    <p>\r\n                        Charger un fichier de créneaux JSON contenant un tableau où chaque élément contient :<br/>\r\n                        <code>\r\n                        start: instanceOf(Date) // début du créneau<br/>\r\n                        end : instanceOf(Date) // fin du créneau<br/>\r\n                        </code>\r\n                        Les créneaux chevauchant d'autres créneaux ne seront pas pris en compte.<br/>\r\n                    </p>\r\n                    <form onSubmit={this.handleSubmitJSONEventsFile}>\r\n                        <label>Garder les créneaux existants\r\n                            <input type=\"checkbox\" name=\"keepExistingEvents\" ref={this.keepExistingEventsCheckbox}/>\r\n                        </label>\r\n                        <br/>\r\n                        <input type=\"file\" accept=\".json\" ref={this.JSONEventsFileInput} />\r\n                        <br />\r\n                        <button type=\"submit\">Envoyer</button>\r\n                    </form>\r\n                </Modal>\r\n                {/* Modal utilisé lorsque l'utilisteur double clique sur un créneau */}\r\n                <Modal \r\n                    isOpen={this.state.showShowMoreForEventModal}\r\n                    contentLabel=\"Show more of event\"\r\n                    className=\"modal showMoreOfTheEventModal\">\r\n                    <div className=\"closeShowMoreModalContainer\">\r\n                        <button className=\"closeShowMoreOfEventModalButton\" onClick={this.handleCloseShowMoreOfEventModal}>Fermer</button>\r\n                    </div>\r\n                    <div className=\"listContainerShowMore\">\r\n                        {this.state.usersOfTheSelectedEvent.length > 0 && \r\n                        <div className=\"usersAcceptedListContainer\">\r\n                            <h2>Liste des utilisateurs autorisés pour ce créneau :</h2>\r\n                            <List \r\n                                items={this.state.usersOfTheSelectedEvent} \r\n                                removeItem={(index, item) => this.handleDenyUserAccess(index, item)}/>\r\n                        </div>}\r\n                        {this.state.usersRequestOfTheSelectedEvent.length > 0 &&\r\n                        <div className=\"userRequestListContainer\">\r\n                            <h2>Liste des utilisateurs en attentes pour ce créneau :</h2>\r\n                            <List \r\n                                items={this.state.usersRequestOfTheSelectedEvent} \r\n                                hasValidateButton={true}\r\n                                removeItem={(index, item) => {this.handleRejectUserRequestAccess(index, item)}}\r\n                                validateItem={(index, item) => {this.handleAcceptUserRequestAccess(index, item)}}/>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    \r\n                </Modal>\r\n                    {/* Calendrier des créneaux */}\r\n                <Calendar\r\n                    selectable\r\n                    localizer={localizer}\r\n                    events={this.state.events}\r\n                    defaultView={Views.WEEK}\r\n                    views={[Views.WEEK]}\r\n                    scrollToTime={new Date(1970, 1, 1, 6)}\r\n                    defaultDate={new Date()}\r\n                    //onSelectEvent={event => alert(event.title)}\r\n                    onDoubleClickEvent={this.handleShowMoreOfTheEvent}\r\n                    onSelectSlot={(t) => this.addEvent(t, true)}\r\n                    dayLayoutAlgorithm={this.state.dayLayoutAlgorithm}\r\n                    step={15}\r\n                    timeslots={4}\r\n                    min={this.state.beginningOfTheDay}\r\n                    max={this.state.endOfTheDay}\r\n                    onSelecting={() => {return false}} // éviter \"d'étirer\" un évnènement avec la souris\r\n                    slotPropGetter={(date) => {return {className: \"my_slot\"}}}\r\n                    components={{\r\n                        toolbar: props => ( \r\n                                <CustomToolbar \r\n                                    {...props} \r\n                                    openJSONLoadModal={this.handleOpenLoadJSONModal}\r\n                                    downloadJSONEvents={this.downloadJSONEvents}\r\n                                    changesSaved={this.state.changesSaved}\r\n                                    saveEventsOnDB={this.saveEventsOnDB}/>),\r\n                        event : props => (\r\n                                <CustomEvent\r\n                                {...props}\r\n                                usersAcceptedForThisEvent={Object.values(this.props.users).filter(u => u.acceptedForEvents).filter(u => u.acceptedForEvents.includes(props.event.id))}\r\n                                usersRequestForThisEvent={Object.values(this.props.users).filter(u => u.requestForEvents).filter(u => u.requestForEvents.includes(props.event.id))}\r\n                                deleteEvent={this.handleRemoveEvent}\r\n                                />)\r\n                    }}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\nexport default EventsCalendar;\r\n","import React from 'react'\nimport './HomePage.css'\n\nimport EventsCalendar from '../EventsCalendar/EventsCalendar'\nimport List from '../List/List'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nimport * as firebase from '../utils/firebase_config'\nimport * as utils_function from '../utils/utils_function'\n\nconst CALENDAR_PAGE = \"calendar_page\"\nconst WAITING_FOR_ACCEPTATION_USERS_PAGE = \"waiting_for_accpt_users_page\"\nconst VIP_USERS_PAGE = \"vip_users_page\"\nconst SHOW_ACCEPTED_USERS_PAGE = \"show_accepted_users_page\"\n\n// URL des créneaux de cours définis sur ADE dans un fichier ics\nconst ICS_EVENTS_ADE_FILE_URL = \"https://planning.univ-ubs.fr/jsp/custom/modules/plannings/anonymous_cal.jsp?data=8241fc3873200214b0ceef9e5de578d6e0fa50826f0818af4a82a8fde6ce3f14906f45af276f59ae8fac93f781e86152d0472efb473cb41ff4beca69cf904027c2973627c2eb073ba5b915c2167188168d3f4109b6629391\"\n\n/**\n * Classe représentant le composant de la page d'accueil (après connexion) de l'application.\n */\nclass HomePage extends React.Component {\n\n    /**\n     * Initialise l'état du composant.\n     * @param {*} props propriétés héritées du parent.\n     */\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            currentPage: CALENDAR_PAGE,\n            events: [],\n            eventsRetrieved: false,\n            users: [],\n            usersRetrieved: false,\n            ADE_Events: null,\n            ADE_EventsRetrieved: false,\n        };\n    } \n\n    /**\n     * Fonction exécuté après le montage du composant.\n     * Récupère les créneaux et les utilisateurs depuis la BDD.\n     * Récupère également les créneaux définis sur l'emploi du temps ADE de l'université.\n     */\n    componentDidMount() {\n        this.retrieveEventsFromDB();\n        this.retrieveUsersFromDB();\n        this.retrieveADE_Events();\n    }\n\n    /**\n     * Récupère depuis ADE les créneaux de cours définis par l'administration.\n     */\n    retrieveADE_Events = () => {\n        const CORS_PROXY_URL = \"https://api.allorigins.win/get?url=\" // CORS proxy\n        fetch(ICS_EVENTS_ADE_FILE_URL) // passe par un proxy CORS\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                ADE_Events: utils_function.parseICS(json.contents),\n                ADE_EventsRetrieved: true\n            })\n        })\n        .catch((error) => console.log(error))\n    }\n\n    /**\n     * Récupère les utilisateurs depus la BDD.\n     */\n    retrieveUsersFromDB = () => {\n        console.log(\"Retrieving users from db...\")\n        firebase.fbDatabase\n            .ref(\"users\")\n            .on(\"value\", \n                (snapshot) => {\n                    this.setState({\n                        users: snapshot.val(),\n                        usersRetrieved: true,\n                    })\n                }, \n                (error) => {\n                    console.error(error)\n                    this.setState({\n                        users: [],\n                        usersRetrieved: false,\n                    })\n                }\n            )\n    }\n\n    /**\n     * Récupère les créneaux depuis la BDD.\n     */\n    retrieveEventsFromDB = () => {\n        console.log(\"Retrieving events from db...\")\n        firebase.fbDatabase\n            .ref(\"events\")\n            .on(\"value\", \n                (snapshot) => {\n                    let tmpEvents = JSON.parse(snapshot.val())                    \n                    tmpEvents.map(e => { // créer des dates à partir des heures de début et de fin (en UTC) des créneaux.\n                        e.start = new Date(e.start)\n                        e.end = new Date(e.end)\n                    })\n                    this.setState({\n                        events: tmpEvents,\n                        eventsRetrieved: true,\n                    })\n                }, \n                (error) => {\n                    console.error(error)\n                    this.setState({\n                        events: [],\n                        eventsRetrieved: false,\n                    })\n                }\n            )\n    }\n\n    /**\n     * Handler du bouton menant au calendrier des créneaux du menu de gauche.\n     */\n    handleCalendarButton = () => {\n        this.setState({currentPage: CALENDAR_PAGE})\n    }\n\n    /**\n     * Handler du bouton menant aux demandes d'accès des utilisateurs.\n     */\n    handleWaitingForAcceptationUsersButton = () => {\n        this.setState({currentPage: WAITING_FOR_ACCEPTATION_USERS_PAGE})\n    }\n\n    /**\n     * Handler du bouton menant aux demandes d'accès VIP des utilisateurs.\n     */\n    handleVIPUsersButton = () => {\n        this.setState({currentPage: VIP_USERS_PAGE})\n    }\n\n    /**\n     * Handler du bouton menant aux utilisateurs acceptés.\n     */\n    handleShowAcceptedUsers = () => {\n        this.setState({currentPage: SHOW_ACCEPTED_USERS_PAGE})\n    }\n\n    /**\n     * Met à jour en BDD les utilisateurs.\n     * C'est à dire que pour chaque utilisateur, on vérifie si les créneaux auxquels ils ont accès existent toujours après les modifications.\n     * De même que pour les créneaux auxquels ils souhaitent accéder.\n     */\n    matchUsersStateByExistingEventsOnDB = (events) => {\n        let tmpUsers = this.state.users\n        let entries = Object.entries(this.state.users)\n        \n        for(let [id, u] of entries) {\n            if(u.requestForEvents) tmpUsers[id].requestForEvents = u.requestForEvents.filter(er => events.flatMap(e => e.id).includes(er))\n            if(u.acceptedForEvents) tmpUsers[id].acceptedForEvents = u.acceptedForEvents.filter(er => events.flatMap(e => e.id).includes(er))\n        }\n\n        this.setState({\n            users: tmpUsers\n        })\n        this.saveUsersStateOnDB();\n    }\n\n    /**\n     * Sauvegarde l'état actuel des utilisateurs sur la BDD.\n     */\n    saveUsersStateOnDB = () => {\n        firebase.fbDatabase.ref(\"users\").set(this.state.users, (error) => {\n            if(error) {\n                console.log(error)\n                alert(error)\n            } else {\n                console.log(\"Changes of users list saved on DB\")\n            }\n        })\n    }\n\n    /**\n     * Réfute l'accès d'un utilisateur pour un créneau.\n     */\n    denieAccessForThisUser = (index, item, ev, callback) => {\n        let userKey = item.id.replace(/[.]/g, '')\n        let tmpUser = this.state.users[userKey]\n        tmpUser.acceptedForEvents = tmpUser.acceptedForEvents.filter(e => e != ev.id)\n        let tmpUsers = this.state.users;\n        tmpUsers[userKey] = tmpUser;\n        this.setState({users: tmpUsers})\n        if(callback) callback()\n        \n        this.saveUsersStateOnDB();\n    }\n\n    /**\n     * Rejette la demande d'accès d'un utilisateur pour un créneau.\n     */\n    rejectRequestAccessForThisUser = (index, item, ev, callback) => {\n        let userKey = item.id.replace(/[.]/g, '')\n        let tmpUser = this.state.users[userKey]\n        tmpUser.requestForEvents = tmpUser.requestForEvents.filter(e => e != ev.id)\n        let tmpUsers = this.state.users;\n        tmpUsers[userKey] = tmpUser;\n        this.setState({users: tmpUsers})\n        if(callback) callback()\n        \n        this.saveUsersStateOnDB();\n    }\n\n    /**\n     * Accepte la demande d'accès d'un utilisateur pour un créneau.\n     */\n    acceptRequestAccesForThisUser = (index, item, ev, callback) => {\n        let userKey = item.id.replace(/[.]/g, '')\n        let tmpUser = this.state.users[userKey]\n        tmpUser.requestForEvents = tmpUser.requestForEvents.filter(e => e != ev.id)\n        if(tmpUser.acceptedForEvents) tmpUser.acceptedForEvents.push(ev.id)\n        else tmpUser.acceptedForEvents = [ev.id]\n        let tmpUsers = this.state.users;\n        tmpUsers[userKey] = tmpUser;\n        this.setState({users: tmpUsers})\n        if(callback) callback()\n\n        this.saveUsersStateOnDB();\n    }\n\n    /**\n     * Rejette la demande d'accès VIP d'un utilisateur.\n     */\n    denieVIPForThisUser = (index, item) => {\n        let userKey = item.id.replace(/[.]/g, '')\n        let tmpUser = this.state.users[userKey]\n        tmpUser.isVIP = false\n        tmpUser.requestVIP = false\n        let tmpUsers = this.state.users;\n        tmpUsers[userKey] = tmpUser;\n        this.setState({users: tmpUsers})\n\n        this.saveUsersStateOnDB();\n    }\n\n    /**\n     * Accepte la demande d'accès VIP d'un utilisateur\n     */\n    authorizeVIPForThisUser = (index, item) => {\n        let userKey = item.id.replace(/[.]/g, '')\n        let tmpUser = this.state.users[userKey]\n        tmpUser.isVIP = true\n        tmpUser.requestVIP = false\n        let tmpUsers = this.state.users;\n        tmpUsers[userKey] = tmpUser;\n        this.setState({users: tmpUsers})\n\n        this.saveUsersStateOnDB();\n    }\n\n    /**\n     * Méthode de rendu du composant.\n     */\n    render() {\n        \n    let dateStringOptions = { hour: \"numeric\", minute: 'numeric' };\n    let centerContent;\n    switch(this.state.currentPage) {\n\n        case CALENDAR_PAGE:\n            centerContent = (\n                <EventsCalendar\n                    ADEevents={this.state.ADE_Events} \n                    events={this.state.events} \n                    users={this.state.users} \n                    denieAcessForThisUser={this.denieAccessForThisUser}\n                    rejectRequestAccessForThisUser={this.rejectRequestAccessForThisUser}\n                    acceptRequestAccesForThisUser={this.acceptRequestAccesForThisUser}\n                    matchUsersStateByExistingEventsOnDB={this.matchUsersStateByExistingEventsOnDB}/>\n            )\n            break;\n        \n        case WAITING_FOR_ACCEPTATION_USERS_PAGE:\n            let listEventsRequested = this.state.events.filter(e => Object.values(this.state.users).filter(u => u.requestForEvents).filter(u => u.requestForEvents.length > 0).map(u => u.requestForEvents).flat().includes(e.id)).map(er => {\n                    \n                    return (\n                    <div key={uuidv4()}>\n                        <h3>Créneau du {er.start.toLocaleDateString(\"fr-FR\", dateStringOptions)} - {er.end.toLocaleDateString(\"fr-FR\", dateStringOptions)}</h3>\n                        <List \n                            items={Object.values(this.state.users).filter(u => u.requestForEvents).filter(u => u.requestForEvents.length > 0).filter(u => u.requestForEvents.includes(er.id))} \n                            removeItem={(index, item) => this.rejectRequestAccessForThisUser(index, item, er)}\n                            validateItem={(index, item) => this.acceptRequestAccesForThisUser(index, item, er)}\n                            hasValidateButton={true}/>\n                    </div>)\n            })\n            centerContent = (\n                <div>\n                    <h2>Demandes d'accès au CyberLab : </h2>\n                    {listEventsRequested}\n                </div>\n            )\n            break;\n\n        case VIP_USERS_PAGE:\n            let requestVIPList = (<List \n                items={Object.values(this.state.users).filter(u => u.requestVIP === true)} \n                removeItem={(index, item) => this.denieVIPForThisUser(index, item)}\n                validateItem={(index, item) => this.authorizeVIPForThisUser(index, item)}\n                hasValidateButton={true}/>)\n\n            let VIPList = (<List \n                items={Object.values(this.state.users).filter(u => u.isVIP === true)} \n                removeItem={(index, item) => this.denieVIPForThisUser(index, item)}/>)\n\n            centerContent = (\n                <div>\n                    <h2>Demandes de libre accès au CyberLab : </h2>\n                    {requestVIPList}\n                    <h2>Utilisateurs en accès libre : </h2>\n                    {VIPList}\n                </div>\n            )\n            break;\n\n        case SHOW_ACCEPTED_USERS_PAGE: \n\n            let listEventsAccepeted = this.state.events.filter(e => Object.values(this.state.users).filter(u => u.acceptedForEvents).filter(u => u.acceptedForEvents.length > 0).map(u => u.acceptedForEvents).flat().includes(e.id)).map(er => {\n                    \n                    return (\n                    <div key={uuidv4()}>\n                        <h3>Créneau du {er.start.toLocaleDateString(\"fr-FR\", dateStringOptions)} - {er.end.toLocaleDateString(\"fr-FR\", dateStringOptions)}</h3>\n                        <List \n                            items={Object.values(this.state.users).filter(u => u.acceptedForEvents).filter(u => u.acceptedForEvents.length > 0).filter(u => u.acceptedForEvents.includes(er.id))} \n                            removeItem={(index, item) => this.denieAccessForThisUser(index, item, er)}/>\n                    </div>)\n            })\n            centerContent = (\n                <div>\n                    <h2>Accès autorisés pour le CyberLab : </h2>\n                    {listEventsAccepeted}\n                </div>\n            )\n            break;\n\n        default: centerContent = (<a>Erreur de routage</a>)\n\n    }\n\n    return (\n        <div className=\"mainContainer\">\n\n            <div className=\"leftMenu\">\n                <button className=\"leftMenuButton\" onClick={this.handleCalendarButton}>Créneaux</button>\n                <button className=\"leftMenuButton\" onClick={this.handleWaitingForAcceptationUsersButton}>En attente ({Object.values(this.state.users).filter(u => u.requestForEvents).map(u => u.requestForEvents).flat().length})</button>\n                <button className=\"leftMenuButton\" onClick={this.handleVIPUsersButton}>Utilisateurs en accès libre ({Object.values(this.state.users).filter(u => u.requestVIP === true).length})</button>\n                <button className=\"leftMenuButton\" onClick={this.handleShowAcceptedUsers}>Utilisateurs acceptés</button>\n                <button className=\"leftMenuButton\" onClick={this.props.handleLogoutButton}>Se déconnecter</button>\n            </div>\n            <div className=\"centerMain\">\n                {(this.state.eventsRetrieved === true && this.state.usersRetrieved === true && this.state.ADE_EventsRetrieved === true) && centerContent}\n                {(this.state.eventsRetrieved === false || this.state.usersRetrieved === false || this.state.ADE_EventsRetrieved === false) && <p>Chargement...</p>}\n            </div>\n        </div>\n    )\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './MainContainer.css'\nimport * as firebase from './utils/firebase_config'\n\nimport ConnectionPage from './ConnectionPage/ConnectionPage'\nimport HomePage from './HomePage/HomePage'\n\nconst CONNECTION_PAGE = \"connection_page\"\nconst HOME_PAGE = \"home_page\"\n\n/**\n * Classe représentant le conteneur principale de l'application.\n * Gère la transition de l'état connecté / déconnecté de l'administrateur.\n */\nclass MainContainer extends React.Component {\n\n  /**\n   * Initialise l'état du composant.\n   * @param {*} props propriétés héritées du parent.\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      currentPage: CONNECTION_PAGE, // par défaut\n    }\n  } \n\n  /**\n   * Handler du bouton de déconnection.\n   */\n  handleLogoutButton = () => {\n    let c = window.confirm(\"Voulez-vous vous déconnecter ?\")\n    if(c) {\n      firebase.fbAuth.signOut()\n      .then(() => console.log(\"Admin disconnected\"))\n      .catch((error) => console.error(error))\n    }\n  }\n\n  /**\n   * Fonction invoquée après le montage du composant.\n   * Ajoute un listener sur l'état de connection.\n   * Si l'admin se connecte, on va à la page d'accueil sinon on va à la page de connexion.\n   */\n  componentDidMount = () => {\n    firebase.fbAuth.onAuthStateChanged((user) => { // observer sur l'état d'authentification de Firebase\n      if(user) {\n        this.setState({currentPage: HOME_PAGE, user: user}) // l'admin s'est connecté\n      }\n      else this.setState({currentPage: CONNECTION_PAGE, user: null}) // pas d'user connecté\n    })\n  }\n\n  /**\n   * Méthode de rendu du composant.\n   */\n  render() {\n    switch(this.state.currentPage) {\n      case CONNECTION_PAGE:\n        return (\n          <div>\n            <ConnectionPage />\n          </div>\n        )\n      case HOME_PAGE:\n        return (\n          <div>\n            <HomePage\n              user={this.state.user}\n              handleLogoutButton={this.handleLogoutButton}\n            />\n          </div>\n        )\n      default: console.error(\"[MainContainer:render] System don't know what is the page to render.\")\n    }\n  }\n}\n\nexport default MainContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainContainer from './MainContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}