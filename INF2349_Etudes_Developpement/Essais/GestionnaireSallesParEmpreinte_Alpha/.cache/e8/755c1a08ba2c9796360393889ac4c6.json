{"id":"node_modules/@react-navigation/core/lib/module/getFocusedRouteNameFromRoute.js","dependencies":[{"name":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\lib\\module\\getFocusedRouteNameFromRoute.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\package.json","includedInParent":true,"mtime":1600885608164},{"name":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\package.json","includedInParent":true,"mtime":1600883558407}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getFocusedRouteNameFromRoute;\n\nfunction getFocusedRouteNameFromRoute(route) {\n  var _state$index;\n\n  const state = route.state;\n  const params = route.params;\n  const routeName = state ? // Get the currently active route name in the nested navigator\n  state.routes[// If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n  // The type property will only exist for rehydrated state and not for state from deep link\n  (_state$index = state.index) !== null && _state$index !== void 0 ? _state$index : typeof state.type === 'string' && state.type !== 'stack' ? 0 : state.routes.length - 1].name : // If state doesn't exist, we need to default to `screen` param if available\n  typeof (params === null || params === void 0 ? void 0 : params.screen) === 'string' ? params.screen : undefined;\n  return routeName;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":7,"column":15},"generated":{"line":8,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"getFocusedRouteNameFromRoute","original":{"line":7,"column":24},"generated":{"line":8,"column":9}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":7,"column":15},"generated":{"line":8,"column":37}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"route","original":{"line":8,"column":2},"generated":{"line":8,"column":38}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":7,"column":15},"generated":{"line":8,"column":43}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":9,"column":22},"generated":{"line":8,"column":45}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":9,"column":22},"generated":{"line":9,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":9,"column":22},"generated":{"line":9,"column":6}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":9,"column":22},"generated":{"line":9,"column":18}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":10,"column":2},"generated":{"line":11,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":10,"column":8},"generated":{"line":11,"column":8}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":10,"column":13},"generated":{"line":11,"column":13}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"route","original":{"line":10,"column":16},"generated":{"line":11,"column":16}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":10,"column":21},"generated":{"line":11,"column":21}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":10,"column":22},"generated":{"line":11,"column":22}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":10,"column":2},"generated":{"line":11,"column":27}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":11,"column":2},"generated":{"line":12,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":11,"column":8},"generated":{"line":12,"column":8}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":11,"column":14},"generated":{"line":12,"column":14}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"route","original":{"line":11,"column":17},"generated":{"line":12,"column":17}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":11,"column":22},"generated":{"line":12,"column":22}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":11,"column":23},"generated":{"line":12,"column":23}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":11,"column":2},"generated":{"line":12,"column":29}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":13,"column":2},"generated":{"line":13,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"routeName","original":{"line":13,"column":8},"generated":{"line":13,"column":8}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":13,"column":17},"generated":{"line":13,"column":17}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":13,"column":20},"generated":{"line":13,"column":20}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":13,"column":25},"generated":{"line":13,"column":25}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":14,"column":6},"generated":{"line":13,"column":28}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":15,"column":6},"generated":{"line":14,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":15,"column":6},"generated":{"line":14,"column":2}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":11},"generated":{"line":14,"column":7}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"routes","original":{"line":15,"column":12},"generated":{"line":14,"column":8}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":15,"column":6},"generated":{"line":14,"column":14}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":16,"column":8},"generated":{"line":14,"column":15}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":17,"column":8},"generated":{"line":15,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":3}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":15}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":18,"column":8},"generated":{"line":16,"column":18}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":18,"column":13},"generated":{"line":16,"column":23}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"index","original":{"line":18,"column":14},"generated":{"line":16,"column":24}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":29}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":35}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":39}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":43}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":55}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":60}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":65}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":66}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":69}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":15,"column":6},"generated":{"line":16,"column":81}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":11},"generated":{"line":16,"column":84}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":19,"column":18},"generated":{"line":16,"column":91}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":23},"generated":{"line":16,"column":96}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"type","original":{"line":19,"column":24},"generated":{"line":16,"column":97}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":11},"generated":{"line":16,"column":101}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":33},"generated":{"line":16,"column":106}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":11},"generated":{"line":16,"column":114}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":19,"column":45},"generated":{"line":16,"column":118}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":50},"generated":{"line":16,"column":123}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"type","original":{"line":19,"column":51},"generated":{"line":16,"column":124}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":19,"column":45},"generated":{"line":16,"column":128}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":60},"generated":{"line":16,"column":133}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":11},"generated":{"line":16,"column":140}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":20,"column":14},"generated":{"line":16,"column":143}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":19,"column":11},"generated":{"line":16,"column":144}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":21,"column":14},"generated":{"line":16,"column":147}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":21,"column":19},"generated":{"line":16,"column":152}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"routes","original":{"line":21,"column":20},"generated":{"line":16,"column":153}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":21,"column":14},"generated":{"line":16,"column":159}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"length","original":{"line":21,"column":27},"generated":{"line":16,"column":160}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":21,"column":14},"generated":{"line":16,"column":166}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":21,"column":36},"generated":{"line":16,"column":169}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"state","original":{"line":15,"column":6},"generated":{"line":16,"column":170}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"name","original":{"line":22,"column":8},"generated":{"line":16,"column":172}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":13,"column":25},"generated":{"line":16,"column":176}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":23,"column":6},"generated":{"line":16,"column":179}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":24,"column":11},"generated":{"line":17,"column":10}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":16}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":21}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":24,"column":11},"generated":{"line":17,"column":25}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":24,"column":11},"generated":{"line":17,"column":29}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":35}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":40}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":45}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":24,"column":11},"generated":{"line":17,"column":46}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":49}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":54}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":24,"column":11},"generated":{"line":17,"column":55}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":24,"column":11},"generated":{"line":17,"column":58}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":17},"generated":{"line":17,"column":64}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"screen","original":{"line":24,"column":19},"generated":{"line":17,"column":65}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":71}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":30},"generated":{"line":17,"column":77}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":85}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"params","original":{"line":25,"column":6},"generated":{"line":17,"column":88}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":25,"column":12},"generated":{"line":17,"column":94}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"screen","original":{"line":25,"column":13},"generated":{"line":17,"column":95}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":17,"column":101}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"undefined","original":{"line":26,"column":6},"generated":{"line":17,"column":104}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":13,"column":2},"generated":{"line":17,"column":113}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":28,"column":2},"generated":{"line":18,"column":0}},{"source":"getFocusedRouteNameFromRoute.tsx","name":"routeName","original":{"line":28,"column":9},"generated":{"line":18,"column":9}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":28,"column":2},"generated":{"line":18,"column":18}},{"source":"getFocusedRouteNameFromRoute.tsx","name":null,"original":{"line":29,"column":1},"generated":{"line":19,"column":0}}],"sources":{"getFocusedRouteNameFromRoute.tsx":"import type {\n  Route,\n  PartialState,\n  NavigationState,\n} from '@react-navigation/routers';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>> & { state?: PartialState<NavigationState> }\n): string | undefined {\n  const state = route.state;\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n"},"lineCount":null}},"error":null,"hash":"8ef12334539f785984330c4bdda2a1ac","cacheData":{"env":{}}}