{"id":"node_modules/@react-navigation/core/lib/module/useCurrentRender.js","dependencies":[{"name":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\lib\\module\\useCurrentRender.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\package.json","includedInParent":true,"mtime":1600885608164},{"name":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\package.json","includedInParent":true,"mtime":1600883558407},{"name":"react","loc":{"line":1,"column":23},"parent":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\lib\\module\\useCurrentRender.js","resolved":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\react\\index.js"},{"name":"./CurrentRenderContext","loc":{"line":2,"column":33},"parent":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\lib\\module\\useCurrentRender.js","resolved":"C:\\Users\\Power Media\\Desktop\\M1\\INF2349_Etudes_Developpement\\GestionnaireSallesParEmpreinte_Alpha\\node_modules\\@react-navigation\\core\\lib\\module\\CurrentRenderContext.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentRender;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _CurrentRenderContext = _interopRequireDefault(require(\"./CurrentRenderContext\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nfunction useCurrentRender({\n  state,\n  navigation,\n  descriptors\n}) {\n  const current = React.useContext(_CurrentRenderContext.default);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"useCurrentRender.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":14,"column":0},"generated":{"line":18,"column":0}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":15},"generated":{"line":22,"column":0}},{"source":"useCurrentRender.tsx","name":"useCurrentRender","original":{"line":18,"column":24},"generated":{"line":22,"column":9}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":15},"generated":{"line":22,"column":25}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":41},"generated":{"line":22,"column":26}},{"source":"useCurrentRender.tsx","name":"state","original":{"line":19,"column":2},"generated":{"line":23,"column":0}},{"source":"useCurrentRender.tsx","name":"state","original":{"line":19,"column":2},"generated":{"line":23,"column":2}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":41},"generated":{"line":23,"column":7}},{"source":"useCurrentRender.tsx","name":"navigation","original":{"line":20,"column":2},"generated":{"line":24,"column":0}},{"source":"useCurrentRender.tsx","name":"navigation","original":{"line":20,"column":2},"generated":{"line":24,"column":2}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":41},"generated":{"line":24,"column":12}},{"source":"useCurrentRender.tsx","name":"descriptors","original":{"line":21,"column":2},"generated":{"line":25,"column":0}},{"source":"useCurrentRender.tsx","name":"descriptors","original":{"line":21,"column":2},"generated":{"line":25,"column":2}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":41},"generated":{"line":26,"column":0}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":18,"column":15},"generated":{"line":26,"column":1}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":22,"column":12},"generated":{"line":26,"column":3}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":23,"column":2},"generated":{"line":27,"column":0}},{"source":"useCurrentRender.tsx","name":"current","original":{"line":23,"column":8},"generated":{"line":27,"column":8}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":23,"column":15},"generated":{"line":27,"column":15}},{"source":"useCurrentRender.tsx","name":"React","original":{"line":23,"column":18},"generated":{"line":27,"column":18}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":23,"column":23},"generated":{"line":27,"column":23}},{"source":"useCurrentRender.tsx","name":"useContext","original":{"line":23,"column":24},"generated":{"line":27,"column":24}},{"source":"useCurrentRender.tsx","name":"React","original":{"line":23,"column":18},"generated":{"line":27,"column":34}},{"source":"useCurrentRender.tsx","name":"CurrentRenderContext","original":{"line":23,"column":35},"generated":{"line":27,"column":35}},{"source":"useCurrentRender.tsx","name":"React","original":{"line":23,"column":18},"generated":{"line":27,"column":64}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":23,"column":2},"generated":{"line":27,"column":65}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":25,"column":2},"generated":{"line":29,"column":0}},{"source":"useCurrentRender.tsx","name":"current","original":{"line":25,"column":6},"generated":{"line":29,"column":6}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":25,"column":13},"generated":{"line":29,"column":13}},{"source":"useCurrentRender.tsx","name":"navigation","original":{"line":25,"column":17},"generated":{"line":29,"column":17}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":25,"column":27},"generated":{"line":29,"column":27}},{"source":"useCurrentRender.tsx","name":"isFocused","original":{"line":25,"column":28},"generated":{"line":29,"column":28}},{"source":"useCurrentRender.tsx","name":"navigation","original":{"line":25,"column":17},"generated":{"line":29,"column":37}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":25,"column":2},"generated":{"line":29,"column":39}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":25,"column":41},"generated":{"line":29,"column":41}},{"source":"useCurrentRender.tsx","name":"current","original":{"line":26,"column":4},"generated":{"line":30,"column":0}},{"source":"useCurrentRender.tsx","name":"current","original":{"line":26,"column":4},"generated":{"line":30,"column":4}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":26,"column":11},"generated":{"line":30,"column":11}},{"source":"useCurrentRender.tsx","name":"options","original":{"line":26,"column":12},"generated":{"line":30,"column":12}},{"source":"useCurrentRender.tsx","name":"current","original":{"line":26,"column":4},"generated":{"line":30,"column":19}},{"source":"useCurrentRender.tsx","name":"descriptors","original":{"line":26,"column":22},"generated":{"line":30,"column":22}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":26,"column":33},"generated":{"line":30,"column":33}},{"source":"useCurrentRender.tsx","name":"state","original":{"line":26,"column":34},"generated":{"line":30,"column":34}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":26,"column":39},"generated":{"line":30,"column":39}},{"source":"useCurrentRender.tsx","name":"routes","original":{"line":26,"column":40},"generated":{"line":30,"column":40}},{"source":"useCurrentRender.tsx","name":"state","original":{"line":26,"column":34},"generated":{"line":30,"column":46}},{"source":"useCurrentRender.tsx","name":"state","original":{"line":26,"column":47},"generated":{"line":30,"column":47}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":26,"column":52},"generated":{"line":30,"column":52}},{"source":"useCurrentRender.tsx","name":"index","original":{"line":26,"column":53},"generated":{"line":30,"column":53}},{"source":"useCurrentRender.tsx","name":"state","original":{"line":26,"column":34},"generated":{"line":30,"column":58}},{"source":"useCurrentRender.tsx","name":"key","original":{"line":26,"column":60},"generated":{"line":30,"column":60}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":26,"column":33},"generated":{"line":30,"column":63}},{"source":"useCurrentRender.tsx","name":"descriptors","original":{"line":26,"column":22},"generated":{"line":30,"column":64}},{"source":"useCurrentRender.tsx","name":"options","original":{"line":26,"column":65},"generated":{"line":30,"column":65}},{"source":"useCurrentRender.tsx","name":"current","original":{"line":26,"column":4},"generated":{"line":30,"column":72}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":27,"column":3},"generated":{"line":31,"column":0}},{"source":"useCurrentRender.tsx","name":null,"original":{"line":28,"column":1},"generated":{"line":32,"column":0}}],"sources":{"useCurrentRender.tsx":"import * as React from 'react';\nimport type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"04ee549b43a9a1284b783ef11d3e05e4","cacheData":{"env":{}}}